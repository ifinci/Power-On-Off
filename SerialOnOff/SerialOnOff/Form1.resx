<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Zv/3tmX//MFq//y8YP/2qkj/w3Ui7IM9A7qRPwCRsk4Aa8tYAEnSWwAt0lwAFuaSCwjjw4738fHx/9HR
        0f94eHj/ubm5/+Pj4//c3Nz/1tXV//fcsP/9rDb//c6K///QlP//zpT//8yT///eu///rVn//6FF//6J
        Jf/jYw7/6YEz//WtZv/3tm7/+8Bu/+6pU//5tlf/8KVB/qphFd1/OACpoEYAd8xZAEHSXAAd9KskLtfE
        of/m5ub/wMDA/+jo6P/i4uL/4uLi/9jY2P/i4d//+sd1//+vNf/+2qP//8yJ///w3v//5sr//8qP//+z
        ZP//rmH//51K/+pkEf/ubRH/9HwV//eVOf/6s2j/9bVu/+ijWv/9yW//+7xZ/+CVMfi6XQmX0VsAM9Jc
        ABP6tTBRyLym/9LS0v++vr7/0NDQ/9zc3P/V1dX/0NDO/9vIof//v1P//7M1///TfP//2aP//9KW//+q
        QP//1aT//7Je//+vXv//t3r/9odI//mDIP/5iB3/+4Yb//2JGv/+oDz/5JVb//e3b//9ynb/+MNk/+6p
        PfzZbgxV0loABvy5Ml+5r5v/wMDA/8XFxf/Kysr/zMzM/8TExP+0q5f/7sh9//+7Qf//tTD//9Nf///d
        pv//37L//96y///BdP//slj//7lv//6zef/7t4f//axW//6eL//+mir//5go//+XJf/lZQ//9Ykw//20
        Zf/+w3b/7LJa/++kO+XBUgkI/LgtXrOhe/+xsbH/tra2/7m5uf+zs7P/t7Su/861g///4KX//9SC///Q
        ef//54///8lq//+5Sf//s0L//69B//+pPf//pkP/+5hS//7VmP//q2T//791//+7YP//r0T//6s5//Js
        Gf/7fhj//o8d//6hOP/2umP/879p//K8ZUf7sjdHsJRa/56env+np6f/qKio/6yqp/+0oXz//dqR///O
        a///zmz//9R+///1sv//46X//9+k///XlP//y37//7lc//6xYf/8rVz//59A//95D///jjP//6db//+t
        TP/+qDj/+IY1//6XKf//ozD//6Es//egIP/vpyn/+Ml0dPyjIxGzkUT4goKD/5iYmP+Lion/mY55//bV
        iv/+yVT//sND///HUP//y1///+qe///vpf//4Jr//92c///epP//47v//tOy///fr///oFH//4kj//+F
        Ff//iBX//40X//2BGv/+tF7//5km//+xPP//tkH/+K4s//SlE//5xWR6AAAAAPvQb4uhiEr/rqB+/9bD
        lP/703b//sZF//67I//+uyL//r0r//7BOv/+yk////e3///xp///553//t2Z//2/hv/9wIb//sKI//7P
        oP//167//8mS//+wW///myr//qRR//+kQf//ixX//5EZ//+kKf/5rB7//bUn//ClNloAAAAA/+u1A/7P
        aXH/1nW6/9Jq5P/OXf7/yU3//8M6//6/LP/+ux///rob//67IP/+xj3//ddw//rIX//1qUb/96hL//u0
        WP/9umT//b5u//7Cd//+yIL//86P//7Ekv//zYz//548//+WH///mRv//qIf//yxFP/9wEP52nAbFgAA
        AAAAAAAAAAAAAAAAAAAAAAAA/9ZxEf/WcTr/02lk/9Vxjv7TbLj+0Wbj/stR/f7GQv/+xDn//b8x//y6
        Kv/8uzP//L1A//y+SP/8v1D//cJZ//y8Xv/8rWP//bdv//69bf//wnP//8V1//++X//+vT3//sA3//Kr
        R4sAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD+5KMP/tuIOP7Y
        fGT+2H2S/th+vP7QYef+yEb+/8Y+//7EOf/8ui//+bAv//u2Pv/9vEb//b1L//7AUf//xFf//8lT///M
        WP/+0nK8875VBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAPznuBT84Js9/duHZ/3ZgJL91XW8/cxV5v7HQf7+x0D//8Q6///D
        Nv/+x0b3/MpVjvzglggAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/O3MFPvi
        pDz80GVh/L02Ufq2JBIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA+AB///gAP//wAA//4AAH/8AAAf+AAAD/AAAAPwAAAB8AAAAHAAAAA4AA
        AACAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAgAAAAPgAAAH/4AAB//+AA///
        /g////////////////////////////////8=
</value>
  </data>
</root>